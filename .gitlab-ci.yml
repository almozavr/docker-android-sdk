image: docker:latest

services:
  - docker:19-dind

variables:
  DOCKER_DRIVER: overlay2
  DOCKER_HOST: tcp://docker:2375
  DOCKER_TLS_CERTDIR: ""
  DOCKER_REGISTRY: docker.io/runmymind
  PROJECT_NAME: docker-andoid-sdk

stages:
  - test
  - build
  - release

lint-docker:
  stage: test
  image:
    name: hadolint/hadolint:latest-alpine
    entrypoint: [ "/bin/sh", "-c" ]
  script:
    - hadolint --ignore=DL3059 ubuntu/lazy-dl/Dockerfile
    - hadolint --ignore=DL3059 ubuntu/standalone/Dockerfile
    - hadolint --ignore=DL3059 alpine/lazydl/Dockerfile
    - hadolint --ignore=DL3059 alpine/standalone/Dockerfile
  dependencies: [ ]

.login-docker: &login-docker
  - docker login -u $DOCKER_HUB_USERNAME -p $DOCKER_HUB_KEY

.build-image: &build-image
  stage: build
  image: docker
  before_script:
    - ': before_script'
    - *login-docker
    - docker pull ${DOCKER_REGISTRY}/${PROJECT_NAME}:$TAG_PREFIX-latest || true
  script:
    - docker build
      --cache-from ${DOCKER_REGISTRY}/${PROJECT_NAME}:${TAG_PREFIX}-latest
      --build-arg APP_VERSION=${CI_COMMIT_SHORT_SHA}
      --build-arg GITLAB_TOKEN=${CI_PRIVATE_TOKEN}
      -t ${DOCKER_REGISTRY}/${PROJECT_NAME}:${TAG_PREFIX}-${CI_COMMIT_SHORT_SHA}
      -f ${TAG_PREFIX/-/\//}/Dockerfile
      .
    - docker push ${DOCKER_REGISTRY}/${PROJECT_NAME}:${TAG_PREFIX}-${CI_COMMIT_SHORT_SHA}

.tag: &tag
  before_script:
    - ': before_script'
    - *login-docker
    - docker pull ${DOCKER_REGISTRY}/${PROJECT_NAME}:${TAG_PREFIX}-${CI_COMMIT_SHORT_SHA}
  script:
    - docker tag ${DOCKER_REGISTRY}/${PROJECT_NAME}:${TAG_PREFIX}-${CI_COMMIT_SHORT_SHA} ${DOCKER_REGISTRY}/${PROJECT_NAME}:${TAG-PREFIX}-${TAG}
    - docker push ${DOCKER_REGISTRY}/${PROJECT_NAME}:${TAG_PREFIX}-${TAG}

.tag-no-prefix: &tag-no-prefix
  before_script:
    - ': before_script'
    - *login-docker
    - docker pull ${DOCKER_REGISTRY}/${PROJECT_NAME}:${TAG_PREFIX}-${CI_COMMIT_SHORT_SHA}
  script:
    - docker tag ${DOCKER_REGISTRY}/${PROJECT_NAME}:${TAG_PREFIX}-${CI_COMMIT_SHORT_SHA} ${DOCKER_REGISTRY}/${PROJECT_NAME}:${TAG}
    - docker push ${DOCKER_REGISTRY}/${PROJECT_NAME}:${TAG}

build-alpine-lazydl:
  stage: build
  variables:
    TAG_PREFIX: "alpine-lazydl"
  <<: *build-image

build-alpine-standalone:
  stage: build
  variables:
    TAG_PREFIX: "alpine-standalone"
  <<: *build-image

build-ubuntu-lazydl:
  stage: build
  variables:
    TAG: latest
    TAG_PREFIX: "ubuntu-lazydl"
  <<: *build-image

build-ubuntu-standalone:
  stage: build
  variables:
    TAG: latest
    TAG_PREFIX: "ubuntu-standalone"
  <<: *build-image

release-alpine-lazydl:
  stage: release
  variables:
    TAG: latest
    TAG_PREFIX: "alpine-lazydl"
  <<: *tag
  only:
    - master

release-alpine-standalone:
  stage: release
  variables:
    TAG: latest
    TAG_PREFIX: "alpine-standalone"
  <<: *tag
  only:
    - master

release-ubuntu-lazydl:
  stage: release
  variables:
    TAG: latest
    TAG_PREFIX: "ubuntu-lazydl"
  <<: *tag
  only:
    - master

release-ubuntu-standalone:
  stage: release
  variables:
    TAG: latest
    TAG_PREFIX: "ubuntu-standalone"
  <<: *tag
  only:
    - master

release-lazydl:
  stage: release
  variables:
    TAG: lazydl
    TAG_PREFIX: "ubuntu-lazydl"
  <<: *tag-no-prefix
  only:
    - master

release-latest:
  stage: release
  variables:
    TAG: latest
    TAG_PREFIX: "ubuntu-standalone"
  <<: *tag-no-prefix
  only:
    - master
